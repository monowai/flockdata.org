### Default configuration properties for fd-engine

## You can override these settings by placing a application.properties
## in the flockdata classpath. This file, deployed with fd-engine and fd-search
## represents the default settings if no other configuration is in use

# Where fd-search
#fd.search.url: http://fd-search:8081

# Default value for new fortresses being created.
# If store in the fortress is false, then only current state data is stored
# i.e. no history
# You can update an existing fortress and set it's store property to false/true to
# disable/enable KV versions

server:
  port: 8080

security:
  sessions: NEVER

eureka:
  client:
    serviceUrl:
      defaultZone: ${org.fd.discovery.url:http://127.0.0.1:8761/eureka/}
  instance:
    preferIpAddress: true

#    enabled: false

# RabbitMQ on docker
# docker run -d -p 5672:5672 -p 15672:15672 --hostname dev-rabbit --name rabbit-dev rabbitmq

spring:
  application:
    name: fd-engine
  cache:
    cache-names: tag,geoQuery,geoData,fortressUser,sysUserApiKey,company,documentType,labels,entityByCode,fortressSegment
    caffeine:
      spec: "maximumSize=200,expireAfterAccess=600s"
  profiles:
    active: fd-server
    include: fd-batch, fd-auth-test
#  Run with the "discovery" profile active to connect
#  cloud:
#    discovery:
#      enabled: false
  messages:
    encoding: UTF-8
  jackson:
    serialization:
      indent_output: true
  rabbitmq:
    password: guest
    username: guest
    host: localhost
    port: 5672
    virtual-host: /



logging:
  level:
    org.flockdata.client: debug

application:
  title: FlockData GraphWriter

org.fd:
  engine:
    fortress:
      # Defaults on creation of a fortress if not otherwise supplied
      search: true
      store: false
      #Index prefix for an internal system fortress. Will expand to .fd.{company}.{doctype}
      index.system.prefix: .fd.
      #ElasticSarch indexes, for entities will have this prefix - fd.{company}.{doctype}
      index.entity.prefix: fd.

    system:
      # Mount point for the api
      api: /api
      constraints: true
      concepts: true
      timings: false
      # The default store to write to IF a fortress allows it. See fd.engine.fortress.store & fd.store.system.enabled
      #  MEMORY, REDIS, RIAK
      storage: RIAK
    messaging:
      prefetchCount: 1
    executor:
      poolSize: 8-15
      queueCapacity: 3

  # Used for handling incoming data
  track:
    executor:
        poolSize: 8-15
        queueCapacity: 3
    messaging:
      concurrentConsumers: 2
      queueCapacity: 10
      prefetchCount: 10

  search:
    api: ${org.fd.search.url:http://127.0.0.1:8081}
    messaging:
      concurrentConsumers: 2
      prefetchCount: 10
    executor:
      poolSize: 20-30
      queueCapacity: 10
  store:
    api: ${org.fd.store.url:http://127.0.0.1:8082}
    system:
      enabled: false
    # Async hand offs to fd-store
    messaging:
      concurrentConsumers: 2
      prefetchCount: 1
    executor:
      poolSize: 8-15
      queueCapacity: 3
  tag:
    executor:
      poolSize: 5-10
      queueCapacity: 30
  log:
    executor:
      poolSize: 5-10
      queueCapacity: 30

## These should be enabled in your environment. If no users are provided then an account with the credentials mike/123 will be created
  auth:
    simple:
      login:
        method: basic
        form: /#/login

#      users:
#        admin:
#          pass: 123
#          roles: FD_USER;FD_ADMIN

    stormpath:
      #apiKeyFile: '${FD_HOME}/conf/apiKey.properties'
      #application: https://api.stormpath.com/v1/applications/2vD7nBoKANqpIFSDvXxfWY
      #group:
      #  user: https://api.stormpath.com/v1/groups/6vxWqi44N3qr7gETXfLbsk
      #group:
      #  admin: https://api.stormpath.com/v1/groups/2Xro288t4Yza6CBuCoFAru

org:
  neo4j:
    # path to neo4j.properties. This setting is for development. It MUST be overriden for other environments
    path: src/main/resources
    # where to write the db files to - required
    server.database.location: data/neo4j
#    dbms.pagecache.memory: 1g
    # Disable the neo4j browser by setting the port to 0
    server:
      webserver:
        # Set the port to =< 0 to disable the WEBUI for Neo4j
        port: 7474
        # 0.0.0.0 sets access from anywhere
        address: 0.0.0.0
    # enable/disable neo4j security (omitting defaults to enabled)
    auth: "true"




## CORS
# Leave the value blank for system defaults
cors:
  supportedHeaders:  '*'
  supportsCredentials:  true
  maxAge: 3600
  allowOrigin:  http://127.0.0.1:9000,http://localhost:9000,chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop
  allowSubdomains:  true
  #supportedMethods:  GET,POST,HEAD,PUT,DELETE
  exposedHeaders:
  tagRequests:

